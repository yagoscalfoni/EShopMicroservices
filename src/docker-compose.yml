version: '3.4'

services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"  # UI do Jaeger
      - "6831:6831/udp"  # Porta do Jaeger para o OpenTelemetry
      - "4317:4317"  # Porta do OTLP gRPC para o Jaeger

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"  # UI do Prometheus

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"  # Porta do Grafana
    depends_on:
      - prometheus
      - jaeger
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

  catalogdb:
    image: postgres


  basketdb:
    image: postgres

  userdb:
    image: mcr.microsoft.com/mssql/server

  distributedcache:
    image: redis

  orderdb:
    image: mcr.microsoft.com/mssql/server

  messagebroker:
    image: rabbitmq:management

  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile

  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile

  discount.grpc:
    image: ${DOCKER_REGISTRY-}discountgrpc
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile

  ordering.api:
    image: ${DOCKER_REGISTRY-}orderingapi
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile

  user.api:
    image: ${DOCKER_REGISTRY-}userapi
    build:
      context: .
      dockerfile: Services/User/User.API/Dockerfile

  yarpapigateway:
    image: ${DOCKER_REGISTRY-}yarpapigateway
    build:
      context: .
      dockerfile: ApiGateways/YarpApiGateway/Dockerfile

  shopping.web:
    image: ${DOCKER_REGISTRY-}shoppingweb
    build:
      context: .
      dockerfile: WebApps/Shopping.Web/Dockerfile

volumes:
  postgres_catalog:
  postgres_basket: